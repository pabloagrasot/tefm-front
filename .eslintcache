[{"/home/pabloagrasot/Cice/tfm-front/src/index.tsx":"1","/home/pabloagrasot/Cice/tfm-front/src/App.tsx":"2","/home/pabloagrasot/Cice/tfm-front/src/acceso/Acceso.tsx":"3","/home/pabloagrasot/Cice/tfm-front/src/ejercicio/Ejercicios.tsx":"4","/home/pabloagrasot/Cice/tfm-front/src/menu/Menu.tsx":"5","/home/pabloagrasot/Cice/tfm-front/src/menu/menu-links.ts":"6","/home/pabloagrasot/Cice/tfm-front/src/registro/Registro.tsx":"7","/home/pabloagrasot/Cice/tfm-front/src/ejercicio-terminado/ejercicio-terminado.tsx":"8"},{"size":221,"mtime":1623870368652,"results":"9","hashOfConfig":"10"},{"size":587,"mtime":1623870368628,"results":"11","hashOfConfig":"10"},{"size":2340,"mtime":1623870368628,"results":"12","hashOfConfig":"10"},{"size":5088,"mtime":1623870368628,"results":"13","hashOfConfig":"10"},{"size":1543,"mtime":1623870368652,"results":"14","hashOfConfig":"10"},{"size":532,"mtime":1623870368652,"results":"15","hashOfConfig":"10"},{"size":4799,"mtime":1624047411310,"results":"16","hashOfConfig":"10"},{"size":937,"mtime":1623870368628,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"vmsyr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/pabloagrasot/Cice/tfm-front/src/index.tsx",[],["37","38"],"/home/pabloagrasot/Cice/tfm-front/src/App.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/acceso/Acceso.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/ejercicio/Ejercicios.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/menu/Menu.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/menu/menu-links.ts",[],"/home/pabloagrasot/Cice/tfm-front/src/registro/Registro.tsx",["39","40"],"import { FC, useState} from 'react'\r\nimport { Formik, useFormik, } from 'formik';\r\nimport './registro.css';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as yup from 'yup'\r\nimport axios from 'axios';\r\ninterface props{\r\n  className:string\r\n  changeClass: () => void\r\n}\r\n\r\ninterface Values {\r\n  name: string;\r\n  lastName: string;\r\n  email: string;\r\n  userName:string;\r\n  password: string;\r\n  confirmPassword:string;\r\n}\r\n\r\n\r\nconst validationSchema = yup.object().shape({\r\n  name: yup.string().required('Campo requerido'),\r\n  lastName: yup.string().required('Campo requerido'),\r\n  email: yup.string().email('Introduce un email correcto').required('Campo requerido'),\r\n  userName:yup.string().required('Campo requerido'),\r\n  password: yup.string().required('Campo requerido')\r\n  .oneOf([yup.ref('confirmPassword')], 'Las contraseñas no son inguales'),\r\n  confirmPassword:yup.string().required('Campo requerido')\r\n  .oneOf([yup.ref('password')], 'Las contraseñas no son inguales')\r\n})\r\nconst sleep = (ms:number) => new Promise((r) => setTimeout(r, ms));\r\n\r\n\r\n\r\nexport const Registro: FC<props> = ({className, changeClass}) => {\r\n  const [success, setSuccess] = useState(null)\r\n\r\n  const onSubmit = async (values:Values) => {\r\n\r\n    const {confirmPassword, ...data} = values\r\n\r\n          const response = await axios.post('http://localhost:3500/signup', data).catch((err) => {\r\n            if (err && err.response)\r\n            console.log('Error: ', err);\r\n          })\r\n\r\n          if(response && response.data){\r\n            setSuccess(response.data.message)\r\n          }\r\n\r\n  }\r\n\r\n  const formik = useFormik({initialValues: { name: '', lastName: '', email: '', userName: '', password: '', confirmPassword: '' }, \r\n    validateOnBlur:true,\r\n    onSubmit,\r\n    validationSchema: validationSchema\r\n  })\r\n\r\n  return (\r\n    <section className={className}>\r\n\r\n         <form className='modal__form' onSubmit={formik.handleSubmit} >\r\n\r\n           <div className='close' onClick={changeClass}>\r\n              <FaIcons.FaTimes />\r\n           </div>\r\n\r\n            <div>\r\n              <h2>Regístrate</h2>\r\n            </div>\r\n\r\n            <div>\r\n              <p className='form-success'> {success ? success: 'Usuario registrado'} </p>\r\n            </div>\r\n\r\n            <div className='form-input'>\r\n              <input id=\"name\" placeholder='Nombre' className='input' type='text' name='name' value={formik.values.name} onChange={formik.handleChange} onBlur={formik.handleBlur}/>\r\n              <div className='input__error'>{formik.touched.name && formik.errors.name ? formik.errors.name: ''}</div>\r\n            </div>\r\n\r\n            <div className='form-input'>\r\n              <input id='lastName' placeholder='Apellido' className='input' type='text' name='lastName' value={formik.values.lastName} onChange={formik.handleChange} onBlur={formik.handleBlur}/>\r\n              <div className='input__error'>{formik.touched.lastName && formik.errors.lastName ? formik.errors.lastName: ''}</div>\r\n            </div>\r\n\r\n            <div className='form-input'>\r\n              <input id='email' placeholder='Correo electrónico' className='input' type='email' name='email' value={formik.values.email} onChange={formik.handleChange} onBlur={formik.handleBlur}/>\r\n              <div className='input__error'>{formik.touched.email && formik.errors.email ? formik.errors.email: ''}</div>\r\n            </div>\r\n\r\n            <div className='form-input'>\r\n              <input id='userName' placeholder='Nombre de Usuario' className='input' type='text' name='userName' value={formik.values.userName} onChange={formik.handleChange} onBlur={formik.handleBlur}/>\r\n              <div className='input__error'>{formik.touched.userName && formik.errors.userName ? formik.errors.userName: ''}</div>\r\n            </div>\r\n\r\n            <div className='form-input'>\r\n              <input id='password' placeholder='Contraseña' className='input' type='password' name='password' value={formik.values.password} onChange={formik.handleChange} onBlur={formik.handleBlur}/>\r\n              <div className='input__error'>{formik.touched.password && formik.errors.password ? formik.errors.password: ''}</div>\r\n           </div>\r\n\r\n           <div className='form-input'>\r\n              <input id='confirmPassword' placeholder='Confirmar contraseña' className='input' type='password' name='confirmPassword' value={formik.values.confirmPassword} onChange={formik.handleChange} onBlur={formik.handleBlur}/>\r\n              <div className='input__error'>{formik.touched.confirmPassword && formik.errors.confirmPassword ? formik.errors.confirmPassword: ''}</div>\r\n           </div>\r\n\r\n           <button className='primary-button' type='submit'>Registrarme</button>\r\n           \r\n         </form>\r\n      \r\n    </section> \r\n  )\r\n}\r\n\r\n","/home/pabloagrasot/Cice/tfm-front/src/ejercicio-terminado/ejercicio-terminado.tsx",[],["41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":16},{"ruleId":"47","severity":1,"message":"51","line":32,"column":7,"nodeType":"49","messageId":"50","endLine":32,"endColumn":12},{"ruleId":"43","replacedBy":"52"},{"ruleId":"45","replacedBy":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'Formik' is defined but never used.","Identifier","unusedVar","'sleep' is assigned a value but never used.",["54"],["55"],"no-global-assign","no-unsafe-negation"]