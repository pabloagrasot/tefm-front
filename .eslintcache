[{"/home/pabloagrasot/Cice/tfm-front/src/index.tsx":"1","/home/pabloagrasot/Cice/tfm-front/src/App.tsx":"2","/home/pabloagrasot/Cice/tfm-front/src/acceso/Acceso.tsx":"3","/home/pabloagrasot/Cice/tfm-front/src/ejercicio/Ejercicios.tsx":"4","/home/pabloagrasot/Cice/tfm-front/src/menu/Menu.tsx":"5","/home/pabloagrasot/Cice/tfm-front/src/menu/menu-links.ts":"6","/home/pabloagrasot/Cice/tfm-front/src/registro/Registro.tsx":"7","/home/pabloagrasot/Cice/tfm-front/src/ejercicio-terminado/ejercicio-terminado.tsx":"8","/home/pabloagrasot/Cice/tfm-front/src/alumnos/Alumnos.tsx":"9","/home/pabloagrasot/Cice/tfm-front/src/alumnos/Add-alumnos.tsx":"10","/home/pabloagrasot/Cice/tfm-front/src/alumnos/infrastructure/api.tsx":"11","/home/pabloagrasot/Cice/tfm-front/src/acceso/domain/validationSchema.tsx":"12","/home/pabloagrasot/Cice/tfm-front/src/alumnos/domain/validationSchema.tsx":"13","/home/pabloagrasot/Cice/tfm-front/src/utils/utils.tsx":"14","/home/pabloagrasot/Cice/tfm-front/src/registro/domain/validationSchema.tsx":"15","/home/pabloagrasot/Cice/tfm-front/src/alumno-results/Alumno.tsx":"16","/home/pabloagrasot/Cice/tfm-front/src/alumno-results/infrastructure/api.tsx":"17","/home/pabloagrasot/Cice/tfm-front/src/alumno-results/Add-exercise.tsx":"18","/home/pabloagrasot/Cice/tfm-front/src/alumno-results/domain/validationSchema.tsx":"19","/home/pabloagrasot/Cice/tfm-front/src/alumno-results/exercises.tsx":"20","/home/pabloagrasot/Cice/tfm-front/src/alumno-results/Exercise-delete.tsx":"21"},{"size":221,"mtime":1623870368652,"results":"22","hashOfConfig":"23"},{"size":670,"mtime":1625859619515,"results":"24","hashOfConfig":"23"},{"size":2877,"mtime":1625862017929,"results":"25","hashOfConfig":"23"},{"size":5088,"mtime":1623870368628,"results":"26","hashOfConfig":"23"},{"size":1634,"mtime":1625858073667,"results":"27","hashOfConfig":"23"},{"size":532,"mtime":1623870368652,"results":"28","hashOfConfig":"23"},{"size":4249,"mtime":1625343595305,"results":"29","hashOfConfig":"23"},{"size":988,"mtime":1625775026798,"results":"30","hashOfConfig":"23"},{"size":3320,"mtime":1625861898869,"results":"31","hashOfConfig":"23"},{"size":2315,"mtime":1625398712952,"results":"32","hashOfConfig":"23"},{"size":264,"mtime":1625849960970,"results":"33","hashOfConfig":"23"},{"size":221,"mtime":1624294738130,"results":"34","hashOfConfig":"23"},{"size":156,"mtime":1625244969386,"results":"35","hashOfConfig":"23"},{"size":538,"mtime":1625862033874,"results":"36","hashOfConfig":"23"},{"size":601,"mtime":1625245020361,"results":"37","hashOfConfig":"23"},{"size":2480,"mtime":1625912468729,"results":"38","hashOfConfig":"23"},{"size":235,"mtime":1625598586483,"results":"39","hashOfConfig":"23"},{"size":4548,"mtime":1625853331811,"results":"40","hashOfConfig":"23"},{"size":295,"mtime":1625393850035,"results":"41","hashOfConfig":"23"},{"size":2541,"mtime":1625912024692,"results":"42","hashOfConfig":"23"},{"size":909,"mtime":1625851360788,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"vmsyr",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},"/home/pabloagrasot/Cice/tfm-front/src/index.tsx",[],["91","92"],"/home/pabloagrasot/Cice/tfm-front/src/App.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/acceso/Acceso.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/ejercicio/Ejercicios.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/menu/Menu.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/menu/menu-links.ts",[],"/home/pabloagrasot/Cice/tfm-front/src/registro/Registro.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/ejercicio-terminado/ejercicio-terminado.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/alumnos/Alumnos.tsx",["93","94"],"import { FC, useEffect, useState, } from 'react'\r\nimport {AddAlumnos} from './Add-alumnos'\r\nimport { Alumno } from '../alumno-results/Alumno';\r\nimport { optionsHeaders } from '../utils/utils'\r\nimport axios, { AxiosResponse } from 'axios'\r\nimport './alumnos.css';\r\nimport * as BoostrapIcons from \"react-icons/bs\";\r\nimport * as Heroicons from \"react-icons/hi\";\r\nimport * as Githubicons from \"react-icons/go\";\r\nimport { alumnosApi, imgApi } from './infrastructure/api';\r\nimport {IStudent} from './domain/interfaces'\r\nimport {deleteToken} from '../utils/utils'\r\n\r\n\r\n\r\nexport const Alumnos: FC = () => {\r\n\r\n  const [logged, setLogged] = useState(false)\r\n  const [logOptions, setLogOptions] = useState(false)\r\n  const showMlogOptions = () => setLogOptions(!logOptions);\r\n\r\n  const [modal, setModal] = useState(false)\r\n  const showModal = () => setModal(!modal);\r\n\r\n  const [modalAlumno, setModalAlumno] = useState(false)\r\n  const showAlumno = () => setModalAlumno(!modalAlumno);\r\n\r\n  const [renderAlumnos, setRenderAlumnos] = useState(false)\r\n  const reload = () => setRenderAlumnos(!renderAlumnos);\r\n\r\n  const [students, setStudents] = useState<IStudent[]>([])\r\n\r\n  const [alumno, setAlumno] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get<IStudent[]>(alumnosApi, optionsHeaders)\r\n      .then((response:AxiosResponse) => {\r\n        setLogged(true)\r\n        setStudents(response.data.data)\r\n      })\r\n      \r\n  }, [renderAlumnos])\r\n\r\n  function getAlumno(alumnoName:string){\r\n    showAlumno()\r\n    setAlumno(alumnoName)\r\n  }\r\n\r\n\r\n  function logOut() {\r\n  deleteToken()\r\n  window.location.href ='/'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Alumnos</h1>\r\n\r\n\r\n      { !logged && <div><p>Accede a tu cuenta para llevar el seguimieto de tus alumnos.</p>\r\n\r\n        <button className=\"primary-button\" onClick={() => window.location.href ='/acceso/'}>Accede</button>\r\n        </div>}\r\n\r\n      { logged && <Heroicons.HiDotsVertical className='options-icon' onClick={showMlogOptions}/>}\r\n\r\n      { logOptions && logged && <ul className='modal__options-icon'>  \r\n\r\n          <li className='nav-link' onClick={showModal}>\r\n            <a>\r\n              <BoostrapIcons.BsPlusCircleFill/>\r\n              <span className='nav-link__title'>Añadir alumno</span>\r\n            </a>\r\n          </li>\r\n\r\n          <li className='nav-link' onClick={logOut}>\r\n            <a>\r\n              <Githubicons.GoSignOut/>\r\n              <span className='nav-link__title'>Cerrar sesión</span>\r\n            </a>\r\n          </li>\r\n\r\n      </ul> }\r\n\r\n\r\n      <AddAlumnos reloadStudents={reload} changeClass={showModal} className={modal ? 'modal active' : 'modal'}></AddAlumnos>\r\n\r\n     \r\n      <section className='students_section'>\r\n      {students.map((student:IStudent, index) => {\r\n              return (\r\n                <div id={student.alumnoName} onClick={() => getAlumno(student.alumnoName)} className='students_section-student' key={index}>\r\n                    <img src={imgApi + student.imagePath} alt=\"\" />\r\n                    <span>{student.alumnoName}</span>\r\n                </div>\r\n              );\r\n            })}\r\n      </section>\r\n\r\n     { (modalAlumno===true) && <Alumno changeClass={showAlumno} reloadStudents={reload} alumnoName={alumno} className={modalAlumno ? 'modal active' : 'modal'}></Alumno> }\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n","/home/pabloagrasot/Cice/tfm-front/src/alumnos/Add-alumnos.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/alumnos/infrastructure/api.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/acceso/domain/validationSchema.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/alumnos/domain/validationSchema.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/utils/utils.tsx",["95"],"import axios, {AxiosResponse} from 'axios'\n\n\nexport const token = sessionStorage.getItem('token')\n\nexport const deleteToken = () => {\n    sessionStorage.removeItem('token');\n}\n\n\n\nexport const optionsHeaders = {\n    headers: {Authorization: token},\n}\n\nexport const getUserName = axios.get('http://localhost:3500/user', optionsHeaders)\n    .then( (response:AxiosResponse )=> {\n        const user = response.data.user.userName\n    })\n    .catch((err) => {\n        if (err && err.response)\n        console.log(err.response.message)\n      })\n\n","/home/pabloagrasot/Cice/tfm-front/src/registro/domain/validationSchema.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/alumno-results/Alumno.tsx",["96","97"],"/home/pabloagrasot/Cice/tfm-front/src/alumno-results/infrastructure/api.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/alumno-results/Add-exercise.tsx",["98","99"],"import { FC, useState, useEffect} from 'react'\nimport { useFormik } from 'formik';\nimport axios from 'axios';\nimport {PropsNewEx} from './domain/props'\nimport { alumnoApi, imgApi } from './infrastructure/api';\nimport {IExercisesValues} from './domain/values'\nimport { validationSchema } from './domain/validationSchema';\nimport * as FaIcons from \"react-icons/fa\";\nimport {optionsHeaders} from '../utils/utils'\n\nexport const AddExercise: FC<PropsNewEx> = ({showNewExercise, getAlumno}) => {\n\n  const [success, setSuccess] = useState(null)\n  const [error, setError] = useState(null)\n  const [next, setNext] = useState(1)\n\n\n  const onSubmit = async (values:IExercisesValues) => {\n    \n\n    const { ...data} = values\n\n          const response = await axios.post(alumnoApi + getAlumno, data, optionsHeaders)\n          \n          .catch((err) => {\n            if (err && err.response)\n            setError(err.response.data.message)\n            setSuccess(null)\n            \n          })\n\n          if(response && response.data){\n            setError(null)\n            setSuccess(response.data.data)\n            formik.resetForm()\n            showNewExercise()\n          }\n  }\n\n  const formik = useFormik({initialValues: { exName:'', dificulty:'', time:'', observations:''}, \n    validateOnBlur:true,\n    onSubmit,\n    validationSchema: validationSchema\n  })\n\n  return (\n    <section className='add-excercise'>\n\n         <form className='modal__form' onSubmit={formik.handleSubmit} >\n\n         <div className='close' onClick={ showNewExercise }>\n          <FaIcons.FaTimes />\n         </div>\n\n            <div>\n              {error==null && <p className='form-success'> {success ? success: ''} </p>}\n              {success==null && <p className='form-error'> {error ? error: ''} </p>}\n            </div>\n\n            {(next === 1) && <div className='form-input'>\n              <p>Nombre del Ejercicio</p>\n              <input id=\"exName\" placeholder='Nombre del ejercicio' className='input' type='text' name='exName' value={formik.values.exName} onChange={formik.handleChange} onBlur={formik.handleBlur}/>\n              <div className='input__error'>{formik.touched.exName && formik.errors.exName ? formik.errors.exName: ''}</div>\n              { formik.touched.exName && !formik.errors.exName && <FaIcons.FaArrowRight onClick={() => setNext(2)} className='next-add-exercise'/>}\n            </div>}\n\n            { (next === 2) && <div className='form-input'>\n              <p>Dificultad</p>\n              <input id=\"dificulty\" placeholder='Dificultad' className='input' type='text' name='dificulty' value={formik.values.dificulty} onChange={formik.handleChange} onBlur={formik.handleBlur}/>\n              <div className='input__error'>{formik.touched.dificulty && formik.errors.dificulty ? formik.errors.dificulty: ''}</div>\n              <FaIcons.FaArrowLeft onClick={() => setNext(1)} className='next-add-exercise'/>\n              {formik.touched.dificulty && !formik.errors.dificulty && <FaIcons.FaArrowRight onClick={() => setNext(3)} className='next-add-exercise'/>}\n            </div>}\n\n            {(next === 3) && <div className='form-input'>\n              <p>Tiempo</p>\n              <input id=\"time\" placeholder='Tiempo' className='input' type='text' name='time' value={formik.values.time} onChange={formik.handleChange} onBlur={formik.handleBlur}/>\n              <div className='input__error'>{formik.touched.time && formik.errors.time ? formik.errors.time: ''}</div>\n              <FaIcons.FaArrowLeft onClick={() => setNext(2)} className='next-add-exercise'/>\n              {formik.touched.time && !formik.errors.time && <FaIcons.FaArrowRight onClick={() => setNext(4)} className='next-add-exercise'/>}\n            </div>}\n\n            {(next === 4) && \n              <div className='last-input__add-excercise'>\n                <div className='form-input'>\n                  <p>Observaciones</p>\n                  <input id=\"observations\" placeholder='Observaciones' className='input' type='text' name='observations' value={formik.values.observations} onChange={formik.handleChange} onBlur={formik.handleBlur}/>\n                  <div className='input__error'>{formik.touched.observations && formik.errors.observations ? formik.errors.observations: ''}</div>\n                  <FaIcons.FaArrowLeft onClick={() => setNext(3)} className='next-add-exercise'/>\n                </div>\n                <button className='primary-button' type='submit'>Guardar</button>\n            </div>}\n           \n         </form>\n      \n    </section> \n  )\n}\n\n","/home/pabloagrasot/Cice/tfm-front/src/alumno-results/domain/validationSchema.tsx",[],"/home/pabloagrasot/Cice/tfm-front/src/alumno-results/exercises.tsx",["100","101"],"/home/pabloagrasot/Cice/tfm-front/src/alumno-results/Exercise-delete.tsx",["102"],"import { FC, useEffect, useState} from 'react'\nimport * as FaIcons from \"react-icons/fa\";\nimport { optionsHeaders } from '../utils/utils'\nimport axios, {AxiosResponse} from 'axios'\nimport {PropsExerciseDelete} from './domain/props'\nimport { IExercise } from './domain/interfaces';\nimport {exercisesApi, alumnoApi} from './infrastructure/api'\n\n\nexport const ExerciseDelete: FC<PropsExerciseDelete> = ({exerciseID, getAlumno, reloadExercises}) => {\n\nconst apiDelete = alumnoApi + getAlumno + exercisesApi + '/' + exerciseID\nconst deleteClick = (id:string) => {\n    axios.delete<IExercise[]>(apiDelete, optionsHeaders)\n  .then((response:AxiosResponse) => {\n    reloadExercises()\n      })\n    }\nuseEffect(() => {\n\n\n}, [exerciseID])\n\n  return (\n    <section className='exercise-options'>\n\n    <FaIcons.FaTrash className='icon-delete-exercise' onClick={() => deleteClick(exerciseID)} />\n      \n    </section> \n  )\n}",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":71,"column":13,"nodeType":"109","endLine":71,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":78,"column":13,"nodeType":"109","endLine":78,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":18,"column":15,"nodeType":"112","messageId":"113","endLine":18,"endColumn":19},{"ruleId":"110","severity":1,"message":"114","line":16,"column":19,"nodeType":"112","messageId":"113","endLine":16,"endColumn":31},{"ruleId":"115","severity":1,"message":"116","line":33,"column":4,"nodeType":"117","endLine":33,"endColumn":17,"suggestions":"118"},{"ruleId":"110","severity":1,"message":"119","line":1,"column":24,"nodeType":"112","messageId":"113","endLine":1,"endColumn":33},{"ruleId":"110","severity":1,"message":"120","line":5,"column":21,"nodeType":"112","messageId":"113","endLine":5,"endColumn":27},{"ruleId":"110","severity":1,"message":"121","line":8,"column":10,"nodeType":"112","messageId":"113","endLine":8,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":26,"column":10,"nodeType":"117","endLine":26,"endColumn":44,"suggestions":"122"},{"ruleId":"110","severity":1,"message":"123","line":1,"column":25,"nodeType":"112","messageId":"113","endLine":1,"endColumn":33},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setGetAlumno' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAlumno'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'useEffect' is defined but never used.","'imgApi' is defined but never used.","'object' is defined but never used.",["127"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [getAlumno, newExercise]",{"range":"132","text":"133"},"Update the dependencies array to be: [getAlumno, renderExercises, showNewExercise]",{"range":"134","text":"135"},[1025,1038],"[getAlumno, newExercise]",[959,993],"[getAlumno, renderExercises, showNewExercise]"]